double findMaxAverage(int* nums, int numsSize, int k) {
    int left = 0;
    int right = 0;
    int sum = 0;
    double avg = INT_MIN;  // Initialize with a very small number
    
    while (right < numsSize) {
        sum += nums[right];
        
        
        if (right - left+1 == k) {  // When the window size equals k
            double currentAvg = (double)sum / k;
            if (currentAvg > avg) {
                avg = currentAvg;  // Update the maximum average
            }
            sum -= nums[left];  // Slide the window
            left++;
        }
        right++;
    }
    return avg;
}double findMaxAverage(int* nums, int numsSize, int k) {
    int left = 0;
    int right = 0;
    int sum = 0;
    double avg = INT_MIN;  // Initialize with a very small number
    
    while (right < numsSize) {
        sum += nums[right];
        
        
        if (right - left+1 == k) {  // When the window size equals k
            double currentAvg = (double)sum / k;
            if (currentAvg > avg) {
                avg = currentAvg;  // Update the maximum average
            }
            sum -= nums[left];  // Slide the window
            left++;
        }
        right++;
    }
    return avg;
}double findMaxAverage(int* nums, int numsSize, int k) {
    int left = 0;
    int right = 0;
    int sum = 0;
    double avg = INT_MIN;  // Initialize with a very small number
    
    while (right < numsSize) {
        sum += nums[right];
        
        
        if (right - left+1 == k) {  // When the window size equals k
            double currentAvg = (double)sum / k;
            if (currentAvg > avg) {
                avg = currentAvg;  // Update the maximum average
            }
            sum -= nums[left];  // Slide the window
            left++;
        }
        right++;
    }
    return avg;
}double findMaxAverage(int* nums, int numsSize, int k) {
    int left = 0;
    int right = 0;
    int sum = 0;
    double avg = INT_MIN;  // Initialize with a very small number
    
    while (right < numsSize) {
        sum += nums[right];
        
        
        if (right - left+1 == k) {  // When the window size equals k
            double currentAvg = (double)sum / k;
            if (currentAvg > avg) {
                avg = currentAvg;  // Update the maximum average
            }
            sum -= nums[left];  // Slide the window
            left++;
        }
        right++;
    }
    return avg;
}
